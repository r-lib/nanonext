% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sync.R
\name{pipe_register}
\alias{pipe_register}
\title{Pipe Register}
\usage{
pipe_register(socket, add = NULL, remove = NULL)
}
\arguments{
\item{socket}{a Socket.}

\item{add}{[default NULL] an R function callback to be run whenever a pipe
is added. If NULL, any previously-registered callback is cancelled.}

\item{remove}{[default NULL] an R function callback to be run whenever a
pipe is removed. If NULL, any previously-registered callback is cancelled.}
}
\value{
Invisibly, zero on success (will otherwise error).
}
\description{
Register a callback to run whenever pipes (individual connections) are
added or removed at a socket.
}
\details{
For add: this event occurs after the pipe is fully added to the socket. Prior
to this time, it is not possible to communicate over the pipe with the
socket.

For remove: this event occurs after the pipe has been removed from the
socket. The underlying transport may be closed at this point, and it is not
possible to communicate using this pipe.

Note: this function cannot be used in conjunction with \code{\link[=pipe_notify]{pipe_notify()}}.
}
\examples{
\dontshow{if (requireNamespace("later", quietly = TRUE)) withAutoprint(\{ # examplesIf}
s <- socket(listen = "inproc://nanopipecb")
pipe_register(s, function() print("hi"), function() print("bye"))

s1 <- socket(dial = "inproc://nanopipecb")
close(s1)

close(s)
\dontshow{\}) # examplesIf}
}
