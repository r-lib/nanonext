% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/server.R
\name{server}
\alias{server}
\title{Start REST Server}
\usage{
server(url = "http://127.0.0.1:5555/api/rest")
}
\arguments{
\item{url}{full http address including hostname, port and path at which to
host the server.}
}
\value{
This function never returns.
}
\description{
Creates an instance of an HTTP REST server which evaluates R expressions sent
    to it [EXPERIMENTAL]. As arbitrary R expressions are evaluated, this
    should only be deployed on the local machine (using the 127.0.0.1
    loopback address) in a trusted environment.
}
\details{
Query the API with an HTTP client using the \sQuote{POST} method,
    with the request data being the R expression as a text string. The
    received response body will consist of the evaluation result as a text
    string (if of the appropriate type), or otherwise a serialized R object,
    which should be passed to \code{\link{unserialize}}.

    If the expression could not be parsed or evaluated, the response will be
    returned with a status code of 500 and a blank body.

    User interrupts will only be processed after the next query has been
    completed, hence return from the function may not be immediate. Use
    \sQuote{ctrl + \\} to forcibly quit the entire R session if required.
}
\examples{
if (interactive()) {

# run server in a new session:
# Rscript -e 'nanonext::server("http://127.0.0.1:5555/api/rest")'

# query using curl:
# curl -X POST http://127.0.0.1:5555/api/rest -d 'format(Sys.time())'

ncurl(
  "http://127.0.0.1:5555/api/rest",
  method = "POST",
  data = "format(Sys.time())"
)

# error will return status of 500
ncurl(
  "http://127.0.0.1:5555/api/rest",
  method = "POST",
  data = "not_valid()"
)

res <- ncurl(
  "http://127.0.0.1:5555/api/rest",
  convert = FALSE,
  method = "POST",
  data = "data.frame(random = nanonext::random(3))"
)
if (!is_error_value(res$data)) unserialize(res$data)

}

}
